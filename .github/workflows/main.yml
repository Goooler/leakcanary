name: Main
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1

  checks:
    runs-on: macos-latest
    steps:

      - name: Project Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'

      - name: Build project
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build --stacktrace

      - name: Assemble Test APK
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleAndroidTest --stacktrace

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-16
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 16
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Espresso Checks
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 16
          script: ./gradlew leakcanary-android-core:connectedCheck leakcanary-android:connectedCheck leakcanary-android-instrumentation:connectedCheck --stacktrace

  snapshot-deployment:
    if: github.repository == 'square/leakcanary' && github.event_name == 'push'
    needs: [ checks ]
    runs-on: ubuntu-latest
    steps:

      - name: Project Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'

      - name: Deploy snapshot
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}

      - name: Cleanup secrets
        if: always()
        run: rm -rf ~/.gradle/gradle.properties
